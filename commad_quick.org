#+title: Command Quick Reference
#+author: Emma <eemmaa@waifu.club>

*Command Quick Reference
** Security
*** GPG
**** decrypt
#+NAME: decrypt
#+BEGIN_SRC shell :noeval
gpg --decrypt -a
gpg --decrypt encryptedfile -o fileout
#+END_SRC
**** encrypt
#+NAME: decrypt
#+BEGIN_SRC shell :noeval
gpg --encrypt -a(--armor)
gpg --encrypt -a -r recipent
#+END_SRC
*** pass
#+NAME: decrypt
#+BEGIN_SRC shell :noeval
pass init gpgid
pass init -p subfolder
pass insert subfolder/name
pass --clip subfolder/name
#+END_SRC
*** Stego
**** Search
#+NAME: decrypt
#+BEGIN_SRC shell :noeval
zbarimg ./qrcode.png [-o output]
binwalk ./file
sstv -d ./audio.wav -o ./picture.png
#+END_SRC
**** Create
#+NAME: encode
#+BEGIN_SRC shell :noeval
qrencode -o ./file.png -r file.txt
pysstv ./inimage.png ./output.wav
#+END_SRC
** macOS
*** Disk
#+NAME: disk
#+BEGIN_SRC shell :noeval
sudo diskutil list
#+END_SRC
*** Bypass
#+NAME: bypass
#+BEGIN_SRC shell :noeval
xattr -d com.apple.quarantine ./App.app
#+END_SRC
** Git
*** Bare repo
#+NAME: bare repo
#+BEGIN_SRC shell :noeval
git init --bare ./directory_to_store
# using bare repo
git --git-dir=./directory_to_store --work-tree=$SRC
git --git-dir=./directory_to_store --work-tree=$SRC --local status.showUntrackedFiles no
git --git-dir=./directory_to_store --work-tree=$SRC add ./file_from_src
git --git-dir=./directory_to_store --work-tree=$SRC commit -m "Your message"
# etc to work with this, alias useful
#+END_SRC
*** New repo for CGIT
#+NAME: bare repo for cgit
#+BEGIN_SRC shell :noeval
#!/bin/bash
cd /srv/git
sudo -Hu git mkdir "$1.git"
cd "/srv/git/$1.git"
sudo -Hu git git init --bare
#+END_SRC
*** Various
#+Name: Various
#+BEGIN_SRC shell :noeval
  git remote add origin remoterepoinfo
  git push --set-upstream origin master
  # these two often need to be run together
  git config --global user.email eemmaa@waifu.club
  git config --global user.name Emma
  git config --global user.signingkey FINGERPRINTGPG
  git config --global commit.gpgsign=true
  # getting your dot files
  cd
  echo ".cfg" >> .gitignore
  git clone --bare <git-repo-url> $HOME/.cfg
  alias config="/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME"
  config checkout 
#+END_SRC
*** Control
#+NAME: stash
#+BEGIN_SRC shell :noeval
  git stash
  # do whateverrr
  git stash pop
#+END_SRC
** Progers
*** Python-Venv
#+NAME: VENV stuff
#+BEGIN_SRC shell :noeval
python3 -m venv ./path
source ./path/bin/activate
#+END_SRC
*** Pip and Prog
#+NAME: pip
#+BEGIN_SRC shell :noeval
python3 -m pip install module
python3 -m pip install --user module
#+END_SRC
Dont forget to get setup tools to build
#+NAME: install python program
#+BEGIN_SRC shell :noeval
python3 setup.py install
#+END_SRC
** FreeBSD
*** vidcontrol / tty
#+NAME: color
#+BEGIN_SRC: shell :noeval
vidcontrol white magenta
#foreground background
#+END_SRC
*** Power
#+NAME: battery
#+BEGIN_SRC: shell :noeval
#percentage left
sysctl hw.acpi.battery.life
#estimated time remaining (-1 if charging)
sysctl hw.acpi.battery.time
#+END_SRC
*** Filesystems
#+NAME: mount ext fs
#+BEGIN_SRC: shell :noeval
geli attach /dev/ada0p3
zpool import -fR /mnt zroot
mount -t zfs zroot/ROOT/default /mnt
zfs mount -a
#+END_SRC
#+NAME: disk raw
#+BEGIN_SRC: shell :noeval
geom disk list
#+END_SRC
*** Config
#+NAME: sysrc
#+BEGIN_SRC
sysrc variable=value
#this will save it to rc.conf
#+END_SRC
** Building
*** libs missing
#+NAME: pkg config
#+BEGIN_SRC: shell :noeval
pkg-config --libs <name>
pkg-config --cflags-only-I || pkg-config --cflags
#take this result and set cflags with build
export CFLAGS= #above results
#+END_SRC
** Tools
#+NAME: mail stuff
#+BEGIN_SRC: shell :noeval
#prep mail box for mu4e
mbsync -a
mu init --my-address email@domain.tld -m ~/Mail/User
#+END_SRC

